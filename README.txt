El TP realizado se basa en los tipos de dato abstractos. Especificamente en el Nodo Enlezado, el punto central que tiene el nodo enlazado es que conoce al 
anterior y al posteior a el. Con el, se realizan distintos tipo de TDA en este trabajo:

- TDA PILA: La pila (como tambien lo es Cola y Lista) es una coleccion ordenada de elementos en la cual, como una pila de platos, tienen una unica entrada (Es decir, salen y entran por ahi) por donde pueden ir apilandose uno por uno. La pila consiste en que el ultimo elemento en entrar es el primero en salir, y viceversa. 

- TDA COLA: La cola es una estructura que posee dos extremos, uno de entrada y uno de salida. Como en la vida cotidiana, el primer en llegar es el primero en la cola, mientras que el ultimo se queda al final. Cuando se quiere retirar un elemento, el primer elemento en entrar es el primero en salir, el siguiente a el es el segundo, y asi sucesivamene hasta que no haya mas elementos.

-TDA LISTA: COnsiste en una lista de Nodos Enlazados, con la particularidad de que en esta, los elementos pueden ser agregados en cualquier posicion y eliminados de cualquier posicion tambien. Varia dependiendo la estructura de su nodo, asi como tambien por su comportamiento(lineal o ciclico).

La solucion implementada cuenta con todas las funciones basicas para la creacion, manejo y destruccion de distintos tipos de listas. La particularidad de este trabajo es que contamos con una estructura llamada Lista_T, la cual contiene el nodo inicial y final de la lista, como tambien la cantidad de nodos en la misma, facilitando el manejo de la misma. La primera funcion utilizada es lista_crear, esta funcion reserva 24 bytes (8 por cada nodo, y 8 para la cantidad) para una variable tipo lista_t. Luego de esto los nodos inicial y final son inicializados como NULL, y la cantidad puesta en 0. Con esta funcion realizada, se puede proceder a llamar a cualquiera de las funciones para el manejo de listas, que piden una lista como parametro:

-Para Pilas: Existen 2 funciones, apilar y desapilar. Si se llama a apilar, se revisa que la lista ni el elemento pasado no sean NULL, y se agrega el elemento como Nodo Incial, seguido por todos los demas. En el caso de desapilar, se asigna al nodo anterior al inicial como inicial, y se libera el anterior.

-Para Colas: Tambien existen 2 funcions, encolar y desencolar. Cuando un elemento se encola, se realiza lo mismo que se hace en la funcion de Insertar Elemento(Vista mas adelante) que es agregar el elemento al final de la cola. Cuando se quiere desencolar, se libera el primer elemento de la lista y se asigna al nodo anterior a este como inicial.

-Para Listas: Las listas de Nodos Enlazados llevan consigo mas funciones debido a las diferetes capacidades de las mismas. En estas, los elementos pueden ser ingresados o eliminados en posiciones especificadas. La primera funcion de estas, es insertar elemento, que realiza lo mismo que Encolar, y inserta el elemento al final. Insertar_Elemento_En_Posicion, pide como parametro ademas de lo usual, una posicion (COnsiderando el nodo inicial como 0). En el caso de que la posicion exista se ingresa el elemento en la posicion indicada y se corren todos los elementos una posicion mas adelante. Si la posicion no existe, se agrega al final de la lista. En el caso de borrar elementos funciona de manera similar, se borra el ultimo elemento de la lista, a menos que se utilice ELiminar_En_Posicion, en la cual se pide una posicion, se borra el elemento en dicha posicion, y todos los elementos se desplazan una posicion mas atras. SI la posicion no existe, se elimina el ultimo elemento.

-Iterador de Listas: El iterador de listas es una estructura la cual permite conseguir los elementos de una lista sin la necesidad de utilizar variables auxiliares. Esta estructura contiene un nodo corriente(EL nodo que se encuentre en ese momento) y la lista de donde se obtiene. Cuenta con dos funciones booleanas, una que avanza el nodo corriente en uno (El nodo corriente puede ser NULL pero no avanza mas de eso), y la otra para revisar si el elemento actual es NULL (Esto sirve para saber si tiene siguiente o no). Por ultimo cuenta con una funcion la cual realiza una funcion pasada por parametro sobre cada elemento de la lista.

Las ultimas dos funciones son para liberar las listas y el iteador de listas respectivamente. Para liberar una lista, se itera por cada nodo liberandolo y asignado el anterior a este como nodo inicial.

